if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-form-builder-field-type/aui-form-builder-field-type.js']) {
   __coverage__['build/aui-form-builder-field-type/aui-form-builder-field-type.js'] = {"path":"build/aui-form-builder-field-type/aui-form-builder-field-type.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":58}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":28}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":16},"end":{"line":54,"column":28}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":26},"end":{"line":64,"column":37}}},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":38}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":23},"end":{"line":89,"column":34}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":20},"end":{"line":104,"column":39}}},"8":{"name":"(anonymous_8)","line":186,"loc":{"start":{"line":186,"column":23},"end":{"line":186,"column":37}}},"9":{"name":"(anonymous_9)","line":189,"loc":{"start":{"line":189,"column":21},"end":{"line":189,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":209,"column":68}},"2":{"start":{"line":19,"column":0},"end":{"line":206,"column":3}},"3":{"start":{"line":31,"column":8},"end":{"line":36,"column":10}},"4":{"start":{"line":37,"column":8},"end":{"line":37,"column":52}},"5":{"start":{"line":39,"column":8},"end":{"line":39,"column":50}},"6":{"start":{"line":41,"column":8},"end":{"line":45,"column":11}},"7":{"start":{"line":55,"column":8},"end":{"line":55,"column":38}},"8":{"start":{"line":65,"column":8},"end":{"line":65,"column":50}},"9":{"start":{"line":76,"column":8},"end":{"line":76,"column":64}},"10":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"11":{"start":{"line":79,"column":12},"end":{"line":79,"column":63}},"12":{"start":{"line":90,"column":8},"end":{"line":90,"column":69}},"13":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"14":{"start":{"line":93,"column":12},"end":{"line":93,"column":52}},"15":{"start":{"line":105,"column":8},"end":{"line":105,"column":70}},"16":{"start":{"line":187,"column":16},"end":{"line":187,"column":49}},"17":{"start":{"line":190,"column":16},"end":{"line":190,"column":58}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"2":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]}},"code":["(function () { YUI.add('aui-form-builder-field-type', function (A, NAME) {","","/**"," * The Form Builder Type Component"," *"," * @module aui-form-builder"," * @submodule aui-form-builder-field-type"," */","","/**"," * A base class for `A.FormBuilderFieldType`."," *"," * @class A.FormBuilderFieldType"," * @extends A.Base"," * @param {Object} config Object literal specifying widget configuration"," *     properties."," * @constructor"," */","A.FormBuilderFieldType = A.Base.create('form-builder-field-type', A.Base, [], {","    TPL_FIELD_TYPE: '<div class=\"field-type\" tabindex=\"0\"></div>',","    TPL_FIELD_TYPE_CONTENT: '<div class=\"field-type-icon {icon}\"></div>' +","        '<div class=\"field-type-label\">{label}</div></div>',","","    /**","     * Constructor for `A.FormBuilderFieldType`. Lifecycle.","     *","     * @method initializer","     * @protected","     */","    initializer: function() {","        this.get('node').setHTML(","            A.Lang.sub(this.TPL_FIELD_TYPE_CONTENT, {","                icon: this.get('icon'),","                label: this.get('label')","            })","        );","        this.get('node').setData('fieldType', this);","","        this._uiSetDisabled(this.get('disabled'));","","        this.after({","            disabledChange: this._afterDisabledChange,","            iconChange: this._afterIconChange,","            labelChange: this._afterLabelChange","        });","    },","","    /**","     * Destructor implementation for `A.FormBuilderFieldType`. Lifecycle.","     *","     * @method destructor","     * @protected","     */","    destructor: function () {","        this.get('node').remove(true);","    },","","    /**","     * Fired after the `disabled` attribute is set.","     *","     * @method _afterDisabledChange","     * @protected","     */","    _afterDisabledChange: function() {","        this._uiSetDisabled(this.get('disabled'));","    },","","    /**","     * Fired after the `icon` attribute is set.","     *","     * @method _afterIconChange","     * @param {CustomEvent} event The fired event","     * @protected","     */","    _afterIconChange: function(event) {","        var iconNode = this.get('node').one('.field-type-icon');","","        if (iconNode) {","            iconNode.replaceClass(event.prevVal, event.newVal);","        }","    },","","    /**","     * Fired after the `label` attribute is set.","     *","     * @method _afterLabelChange","     * @protected","     */","    _afterLabelChange: function() {","        var labelElement = this.get('node').one('.field-type-label');","","        if (labelElement) {","            labelElement.setHTML(this.get('label'));","        }","    },","","    /**","     * Updates the UI according to the value of the `disabled` attribute.","     *","     * @method _uiSetDisabled","     * @param {Boolean} disabled","     * @protected","     */","    _uiSetDisabled: function(disabled) {","        this.get('node').toggleClass('field-type-disabled', disabled);","    }","}, {","","    /**","     * Static property used to define the default attribute","     * configuration for the `A.FormBuilderFieldType`.","     *","     * @property ATTRS","     * @type Object","     * @static","     */","    ATTRS: {","","        /**","         * The default configuration object to be used when creating an instance","         * of a field of this type.","         *","         * @attribute defaultConfig","         * @default {}","         * @type {Object}","         */","        defaultConfig: {","            validator: A.Lang.isObject,","            value: {}","        },","","        /**","         * Defines if the field type should be disabled or not.","         *","         * @attribute disabled","         * @default false","         * @type {Boolean}","         */","        disabled: {","            validator: A.Lang.isBoolean,","            value: false","        },","","        /**","         * The js class constructor to be used when instantiating this field.","         *","         * @attribute fieldClass","         * @type {Function}","         */","        fieldClass: {","            validator: A.Lang.isFunction","        },","","        /**","         * Contains a CSS class of the icon to use. A list of icons can be found","         * [here](http://liferay.github.io/alloy-bootstrap/base-css.html#icons).","         *","         * @attribute icon","         * @default ''","         * @type {String}","         */","        icon: {","            validator: A.Lang.isString,","            value: ''","        },","","        /**","         * The label of the input field.","         *","         * @attribute label","         * @default ''","         * @type {String}","         */","        label: {","            validator: A.Lang.isString,","            value: ''","        },","","        /**","         * The node used to render this field type.","         *","         * @attribute node","         * @type {Node}","         */","        node: {","            validator: function(val) {","                return A.instanceOf(val, A.Node);","            },","            valueFn: function() {","                return A.Node.create(this.TPL_FIELD_TYPE);","            }","        },","","        /**","         * Defines if the input field is unique or not.","         *","         * @attribute unique","         * @default false","         * @type {Boolean}","         */","        unique: {","            validator: A.Lang.isBoolean,","            value: false","        }","    }","});","","","}, '3.0.1', {\"requires\": [\"base\", \"node-base\"], \"skinnable\": true});","","}());"]};
}
var __cov_AH6FcKt1g81ninRSoZaCRQ = __coverage__['build/aui-form-builder-field-type/aui-form-builder-field-type.js'];
__cov_AH6FcKt1g81ninRSoZaCRQ.s['1']++;YUI.add('aui-form-builder-field-type',function(A,NAME){__cov_AH6FcKt1g81ninRSoZaCRQ.f['1']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['2']++;A.FormBuilderFieldType=A.Base.create('form-builder-field-type',A.Base,[],{TPL_FIELD_TYPE:'<div class="field-type" tabindex="0"></div>',TPL_FIELD_TYPE_CONTENT:'<div class="field-type-icon {icon}"></div>'+'<div class="field-type-label">{label}</div></div>',initializer:function(){__cov_AH6FcKt1g81ninRSoZaCRQ.f['2']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['3']++;this.get('node').setHTML(A.Lang.sub(this.TPL_FIELD_TYPE_CONTENT,{icon:this.get('icon'),label:this.get('label')}));__cov_AH6FcKt1g81ninRSoZaCRQ.s['4']++;this.get('node').setData('fieldType',this);__cov_AH6FcKt1g81ninRSoZaCRQ.s['5']++;this._uiSetDisabled(this.get('disabled'));__cov_AH6FcKt1g81ninRSoZaCRQ.s['6']++;this.after({disabledChange:this._afterDisabledChange,iconChange:this._afterIconChange,labelChange:this._afterLabelChange});},destructor:function(){__cov_AH6FcKt1g81ninRSoZaCRQ.f['3']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['7']++;this.get('node').remove(true);},_afterDisabledChange:function(){__cov_AH6FcKt1g81ninRSoZaCRQ.f['4']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['8']++;this._uiSetDisabled(this.get('disabled'));},_afterIconChange:function(event){__cov_AH6FcKt1g81ninRSoZaCRQ.f['5']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['9']++;var iconNode=this.get('node').one('.field-type-icon');__cov_AH6FcKt1g81ninRSoZaCRQ.s['10']++;if(iconNode){__cov_AH6FcKt1g81ninRSoZaCRQ.b['1'][0]++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['11']++;iconNode.replaceClass(event.prevVal,event.newVal);}else{__cov_AH6FcKt1g81ninRSoZaCRQ.b['1'][1]++;}},_afterLabelChange:function(){__cov_AH6FcKt1g81ninRSoZaCRQ.f['6']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['12']++;var labelElement=this.get('node').one('.field-type-label');__cov_AH6FcKt1g81ninRSoZaCRQ.s['13']++;if(labelElement){__cov_AH6FcKt1g81ninRSoZaCRQ.b['2'][0]++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['14']++;labelElement.setHTML(this.get('label'));}else{__cov_AH6FcKt1g81ninRSoZaCRQ.b['2'][1]++;}},_uiSetDisabled:function(disabled){__cov_AH6FcKt1g81ninRSoZaCRQ.f['7']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['15']++;this.get('node').toggleClass('field-type-disabled',disabled);}},{ATTRS:{defaultConfig:{validator:A.Lang.isObject,value:{}},disabled:{validator:A.Lang.isBoolean,value:false},fieldClass:{validator:A.Lang.isFunction},icon:{validator:A.Lang.isString,value:''},label:{validator:A.Lang.isString,value:''},node:{validator:function(val){__cov_AH6FcKt1g81ninRSoZaCRQ.f['8']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['16']++;return A.instanceOf(val,A.Node);},valueFn:function(){__cov_AH6FcKt1g81ninRSoZaCRQ.f['9']++;__cov_AH6FcKt1g81ninRSoZaCRQ.s['17']++;return A.Node.create(this.TPL_FIELD_TYPE);}},unique:{validator:A.Lang.isBoolean,value:false}}});},'3.0.1',{'requires':['base','node-base'],'skinnable':true});
