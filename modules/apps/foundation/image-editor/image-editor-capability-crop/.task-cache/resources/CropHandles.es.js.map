{"version":3,"sources":["/source/CropHandles.es.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAUM;;;;;;;;;wBACL,+BAAW;;;AACV,QAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,UAAb,CADT;;AAGV,mBAAM,QAAN,CAAe,YAAM;AACpB,QAAI,SAAS,OAAK,eAAL,EAAT,CADgB;;AAGpB,WAAK,OAAL,CAAa,KAAb,CAAmB,KAAnB,GAA2B,OAAO,WAAP,GAAqB,EAArB,GAA0B,IAA1B,CAHP;AAIpB,WAAK,OAAL,CAAa,KAAb,CAAmB,MAAnB,GAA4B,OAAO,YAAP,GAAsB,EAAtB,GAA2B,IAA3B,CAJR;AAKpB,WAAK,OAAL,CAAa,KAAb,CAAmB,GAAnB,GAAyB,OAAO,SAAP,GAAmB,CAAnB,GAAuB,IAAvB,CALL;AAMpB,WAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,GAA0B,OAAO,UAAP,GAAoB,CAApB,GAAwB,IAAxB,CANN;;AAQpB,WAAK,cAAL,GAAsB,mBAAS;AAC9B,gBAAW,MAAX;AACA,cAAS,OAAK,OAAL;AACT,cAAS,OAAK,OAAL;KAHY,CAAtB,CARoB;;AAcpB,QAAI,UAAU,OAAK,OAAL,CAAa,aAAb,CAA2B,gBAA3B,CAAV,CAdgB;;AAgBpB,WAAK,SAAL,GAAiB,mBAAS;AACzB,gBAAW,MAAX;AACA,cAAS,OAAT;AACA,cAAS,OAAT;KAHgB,CAAjB,CAhBoB;;AAsBpB,YAAQ,gBAAR,CAAyB,WAAzB,EAAsC,UAAC,KAAD;YAAW,MAAM,eAAN;KAAX,CAAtC,CAtBoB;;AAwBpB,WAAK,SAAL,CAAe,EAAf,CAAkB,eAAK,MAAL,CAAY,IAAZ,EAAkB,UAAC,IAAD,EAAO,KAAP,EAAiB;AACpD,YAAK,OAAL,CAAa,KAAb,CAAmB,KAAnB,GAA2B,KAAK,SAAL,GAAiB,EAAjB,GAAsB,IAAtB,CADyB;AAEpD,YAAK,OAAL,CAAa,KAAb,CAAmB,MAAnB,GAA4B,KAAK,SAAL,GAAiB,EAAjB,GAAsB,IAAtB,CAFwB;KAAjB,CAApC,CAxBoB;;AA6BpB,kBAAI,aAAJ,CAAkB,OAAK,OAAL,EAAc,MAAhC,EA7BoB;AA8BpB,kBAAI,MAAJ,CAAW,OAAO,aAAP,EAAsB,OAAK,OAAL,CAAjC,CA9BoB;IAAN,CAAf,CAHU;;;SADN;;;;;;;;AA4CN,aAAY,KAAZ,GAAoB;;;;;AAKnB,mBAAiB;AAChB,cAAW,eAAK,UAAL;GADZ;EALD;;;AAWA,eAAI,QAAJ,CAAa,WAAb;;mBAEe","sourcesContent":["import Component from 'metal-component/src/Component';\nimport Soy from 'metal-soy/src/Soy';\n\nimport async from 'metal/src/async/async';\nimport core from 'metal/src/core';\nimport dom from 'metal-dom/src/dom';\nimport Drag from 'metal-drag-drop/src/Drag';\n\nimport handlesTemplates from './CropHandles.soy';\n\nclass CropHandles extends Component {\n\tattached() {\n\t\tthis.parentNode_ = this.element.parentNode;\n\n\t\tasync.nextTick(() =>Â {\n\t\t\tlet canvas = this.getEditorCanvas();\n\n\t\t\tthis.element.style.width = canvas.offsetWidth + 12 + 'px';\n\t\t\tthis.element.style.height = canvas.offsetHeight + 12 + 'px';\n\t\t\tthis.element.style.top = canvas.offsetTop - 6 + 'px';\n\t\t\tthis.element.style.left = canvas.offsetLeft - 6 + 'px';\n\n\t\t\tthis.selectionDrag_ = new Drag({\n\t\t\t\tconstrain: canvas,\n\t\t\t\thandles: this.element,\n\t\t\t\tsources: this.element\n\t\t\t});\n\n\t\t\tvar resizer = this.element.querySelector('.resize-handle');\n\n\t\t\tthis.sizeDrag_ = new Drag({\n\t\t\t\tconstrain: canvas,\n\t\t\t\thandles: resizer,\n\t\t\t\tsources: resizer\n\t\t\t});\n\n\t\t\tresizer.addEventListener('mousedown', (event) => event.stopPropagation());\n\n\t\t\tthis.sizeDrag_.on(Drag.Events.DRAG, (data, event) => {\n\t\t\t\tthis.element.style.width = data.relativeX + 12 + 'px';\n\t\t\t\tthis.element.style.height = data.relativeY + 12 + 'px';\n\t\t\t});\n\n\t\t\tdom.removeClasses(this.element, 'hide');\n\t\t\tdom.append(canvas.parentElement, this.element);\n\t\t});\n\t}\n}\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nCropHandles.STATE = {\n\t/**\n\t * Injected helper to get the editor canvas element\n\t * @type {Function}\n\t */\n\tgetEditorCanvas: {\n\t\tvalidator: core.isFunction\n\t}\n};\n\n// Register component\nSoy.register(CropHandles, handlesTemplates);\n\nexport default CropHandles;"]}