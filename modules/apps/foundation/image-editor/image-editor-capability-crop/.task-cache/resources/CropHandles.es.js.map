{"version":3,"sources":["/source/CropHandles.es.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KASM;;;;;;;;;wBACL,+BAAW;;;AACV,QAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,UAAb,CADT;;AAGV,mBAAM,QAAN,CAAe,YAAM;AACpB,QAAI,iBAAiB,OAAK,uBAAL,EAAjB,CADgB;;AAGpB,WAAK,OAAL,CAAa,SAAb,CAAuB,MAAvB,CAA8B,MAA9B,EAHoB;AAIpB,mBAAe,WAAf,CAA2B,OAAK,OAAL,CAA3B,CAJoB;;AAMpB,WAAK,cAAL,GAAsB,mBAAS;AAC9B,gBAAW,MAAM,OAAK,gBAAL;AACjB,cAAS,OAAK,OAAL;AACT,cAAS,OAAK,OAAL;KAHY,CAAtB,CANoB;;AAYpB,QAAI,UAAU,OAAK,OAAL,CAAa,aAAb,CAA2B,gBAA3B,CAAV,CAZgB;;AAcpB,WAAK,SAAL,GAAiB,mBAAS;AACzB,gBAAW,MAAM,OAAK,gBAAL;AACjB,cAAS,OAAT;AACA,cAAS,OAAT;KAHgB,CAAjB,CAdoB;;AAoBpB,YAAQ,gBAAR,CAAyB,WAAzB,EAAsC,UAAC,KAAD;YAAW,MAAM,eAAN;KAAX,CAAtC,CApBoB;;AAsBpB,WAAK,SAAL,CAAe,EAAf,CAAkB,eAAK,MAAL,CAAY,IAAZ,EAAkB,UAAC,IAAD,EAAO,KAAP,EAAiB;AACpD,YAAK,OAAL,CAAa,KAAb,CAAmB,KAAnB,GAA2B,KAAK,SAAL,GAAiB,IAAjB,CADyB;AAEpD,YAAK,OAAL,CAAa,KAAb,CAAmB,MAAnB,GAA4B,KAAK,SAAL,GAAiB,IAAjB,CAFwB;KAAjB,CAApC,CAtBoB;IAAN,CAAf,CAHU;;;SADN;;;;;;;;AAuCN,aAAY,KAAZ,GAAoB;;;;;AAKnB,2BAAyB;AACxB,cAAW,eAAK,UAAL;GADZ;EALD;;;AAWA,eAAI,QAAJ,CAAa,WAAb;;mBAEe","sourcesContent":["import Component from 'metal-component/src/Component';\nimport Soy from 'metal-soy/src/Soy';\n\nimport async from 'metal/src/async/async';\nimport core from 'metal/src/core';\nimport Drag from 'metal-drag-drop/src/Drag';\n\nimport handlesTemplates from './CropHandles.soy';\n\nclass CropHandles extends Component {\n\tattached() {\n\t\tthis.parentNode_ = this.element.parentNode;\n\n\t\tasync.nextTick(() =>Â {\n\t\t\tlet imageContainer = this.getEditorImageContainer();\n\n\t\t\tthis.element.classList.remove('hide');\n\t\t\timageContainer.appendChild(this.element);\n\n\t\t\tthis.selectionDrag_ = new Drag({\n\t\t\t\tconstrain: '#' + this.imageContainerId,\n\t\t\t\thandles: this.element,\n\t\t\t\tsources: this.element\n\t\t\t});\n\n\t\t\tvar resizer = this.element.querySelector('.resize-handle');\n\n\t\t\tthis.sizeDrag_ = new Drag({\n\t\t\t\tconstrain: '#' + this.imageContainerId,\n\t\t\t\thandles: resizer,\n\t\t\t\tsources: resizer\n\t\t\t});\n\n\t\t\tresizer.addEventListener('mousedown', (event) => event.stopPropagation());\n\n\t\t\tthis.sizeDrag_.on(Drag.Events.DRAG, (data, event) => {\n\t\t\t\tthis.element.style.width = data.relativeX + 'px';\n\t\t\t\tthis.element.style.height = data.relativeY + 'px';\n\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nCropHandles.STATE = {\n\t/**\n\t * Injected helper to get the editor image container\n\t * @type {Function}\n\t */\n\tgetEditorImageContainer: {\n\t\tvalidator: core.isFunction\n\t}\n};\n\n// Register component\nSoy.register(CropHandles, handlesTemplates);\n\nexport default CropHandles;"]}