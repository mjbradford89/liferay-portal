{"version":3,"sources":["/source/FilterComponent.es.js"],"names":[],"mappings":"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","sourcesContent":["import Component from 'metal-component/src/Component';\nimport Soy from 'metal-soy/src/Soy';\n\nimport core from 'metal/src/core';\nimport { CancellablePromise } from 'metal-promise/src/promise/Promise';\n\nimport componentTemplates from './FilterComponent.soy';\nimport controlsTemplates from './FilterControls.soy';\n\n/**\n * Filter Component\n */\nclass FilterComponent extends Component {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.cache_ = {};\n\n\t\tlet filters = [{\n\t\t\tid: 'sepia',\n\t\t\turi: this.modulePath + '/FilterWorkerSepia.js'\n\t\t}, {\n\t\t\tid: 'polaroid',\n\t\t\turi: this.modulePath + '/FilterWorkerPolaroid.js'\n\t\t}, {\n\t\t\tid: 'invert',\n\t\t\turi: this.modulePath + '/FilterWorkerInvert.js'\n\t\t}, {\n\t\t\tid: 'grayscale',\n\t\t\turi: this.modulePath + '/FilterWorkerGrayscale.js'\n\t\t}];\n\n\t\tthis.getEditorImageData()\n\t\t\t.then(imageData => {\n\t\t\t\tfilters.forEach(filter => {\n\t\t\t\t\tthis.spawnWorker_(filter.uri, {imageData: imageData.preview})\n\t\t\t\t\t\t.then(filteredImageData => {\n\t\t\t\t\t\t\tlet offscreenCanvas = document.createElement('canvas');\n\t\t\t\t\t\t\toffscreenCanvas.height = filteredImageData.height;\n\t\t\t\t\t\t\toffscreenCanvas.width = filteredImageData.width;\n\t\t\t\t\t\t\toffscreenCanvas.getContext('2d').putImageData(filteredImageData, 0, 0);\n\n\t\t\t\t\t\t\tlet canvas = this.element.querySelector('#' + this.key + filter.id + ' canvas');\n\t\t\t\t\t\t\tcanvas.getContext('2d').drawImage(offscreenCanvas, 0, 0, filteredImageData.width, filteredImageData.height, 0, 0, canvas.width, canvas.height);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tthis.cache_ = {};\n\t}\n\n\t/**\n\t * Applies the brighntess filter to generate a final version of the\n\t * image. It caches intermediate results to avoid processing again in\n\t * case the same brightnessValue is requested again for the same image.\n\t *\n\t * @param  {Object} imageData An object with several image representations.\n\t * @return {CancellablePromise} A promise that will resolve when the webworker\n\t * finishes processing the image for preview.\n\t */\n\tpreview(imageData) {\n\t\tlet filters = {\n\t\t\tsepia: this.modulePath + '/FilterWorkerSepia.js',\n\t\t\tinvert: this.modulePath + '/FilterWorkerInvert.js',\n\t\t\tgrayscale: this.modulePath + '/FilterWorkerGrayscale.js',\n\t\t\tpolaroid: this.modulePath + '/FilterWorkerPolaroid.js'\n\t\t};\n\n\t\tlet promise = this.cache_[this.filter_];\n\n\t\tif (!promise) {\n\t\t\tpromise = this.spawnWorker_(filters[this.filter_], {\n\t\t\t\timageData: imageData.preview\n\t\t\t});\n\n\t\t\tthis.cache_[this.filter_] = promise;\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Applies the brighntess filter to generate a final\n\t * version of the image.\n\t *\n\t * @param  {Object} imageData An object with several image representations.\n\t * @return {CancellablePromise} A promise that will resolve when the webworker\n\t * finishes processing the image for preview.\n\t */\n\tprocess(imageData) {\n\t\tlet filters = {\n\t\t\tsepia: this.modulePath + '/FilterWorkerSepia.js',\n\t\t\tinvert: this.modulePath + '/FilterWorkerInvert.js',\n\t\t\tgrayscale: this.modulePath + '/FilterWorkerGrayscale.js',\n\t\t\tpolaroid: this.modulePath + '/FilterWorkerPolaroid.js'\n\t\t};\n\n\t\treturn new CancellablePromise((resolve, reject) => {\n\t\t\tthis.spawnWorker_(filters[this.filter_], {\n\t\t\t\timageData: imageData.raw\n\t\t\t})\n\t\t\t\t.then(result => resolve(imageData.toURL(result)));\n\t\t});\n\t}\n\n\tpreviewFilter(event) {\n\t\tthis.filter_ = event.delegateTarget.getAttribute('data-filter');\n\t\tthis.requestEditorPreview();\n\t}\n\n\t/**\n\t * Spawns the a webworker to do the image processing in a different thread.\n\t *\n\t * @param  {String} workerURI URI of the worker to spawn.\n\t * @param  {Object} message An object with the image and brightness value.\n\t * @return {CancellablePromise} A promise that will resolve when the webworker\n\t * finishes processing the image.\n\t */\n\tspawnWorker_(workerURI, message) {\n\t\treturn new CancellablePromise((resolve, reject) => {\n\t\t\tlet processWorker = new Worker(workerURI);\n\n\t\t\tprocessWorker.onmessage = (event) => resolve(event.data);\n\t\t\tprocessWorker.postMessage(message);\n\t\t});\n\t}\n}\n\n/**\n * State definition.\n * @type {!Object}\n * @static\n */\nFilterComponent.STATE = {\n\t/**\n\t * Injected helper to get the editor image data\n\t * @type {Function}\n\t */\n\tgetEditorImageData: {\n\t\tvalidator: core.isFunction\n\t},\n\n\t/**\n\t * Injected helper to get the editor image data\n\t * @type {Function}\n\t */\n\trequestEditorPreview: {\n\t\tvalidator: core.isFunction\n\t},\n\n\t/**\n\t * Path of this module\n\t * @type {Function}\n\t */\n\tmodulePath: {\n\t\tvalidator: core.isString\n\t}\n};\n\n// Register component\nSoy.register(FilterComponent, componentTemplates);\n\nexport default FilterComponent;"]}