{"version":3,"sources":["/source/ContrastComponent.es.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAYM;;;;;;;;;8BAIL,+BAAW;AACV,QAAK,MAAL,GAAc,EAAd,CADU;;;AAJN,8BAWL,+BAAW;AACV,QAAK,MAAL,GAAc,EAAd,CADU;;;AAXN,8BAwBL,2BAAQ,WAAW;AAClB,OAAI,gBAAgB,KAAK,UAAL,CAAgB,cAAhB,CAA+B,KAA/B,CADF;AAElB,OAAI,UAAU,KAAK,MAAL,CAAY,aAAZ,CAAV,CAFc;;AAIlB,OAAI,CAAC,OAAD,EAAU;AACb,cAAU,KAAK,YAAL,CAAkB;AAC3B,oBAAe,aAAf;AACA,gBAAW,UAAU,OAAV;KAFF,CAAV,CADa;;AAMb,SAAK,MAAL,CAAY,aAAZ,IAA6B,OAA7B,CANa;IAAd;;AASA,UAAO,OAAP,CAbkB;;;AAxBd,8BAgDL,2BAAQ,WAAW;;;AAClB,OAAI,gBAAgB,KAAK,UAAL,CAAgB,cAAhB,CAA+B,KAA/B,CADF;;AAGlB,UAAO,gCAAuB,UAAC,OAAD,EAAU,MAAV,EAAqB;AAClD,WAAK,YAAL,CAAkB;AACjB,oBAAe,aAAf;AACA,gBAAW,UAAU,GAAV;KAFZ,EAIE,IAJF,CAIO;YAAU,QAAQ,UAAU,KAAV,CAAgB,MAAhB,CAAR;KAAV,CAJP,CADkD;IAArB,CAA9B,CAHkB;;;AAhDd,8BAmEL,qCAAa,SAAS;;;AACrB,UAAO,gCAAuB,UAAC,OAAD,EAAU,MAAV,EAAqB;AAClD,QAAI,YAAY,OAAK,UAAL,GAAkB,oBAAlB,CADkC;AAElD,QAAI,gBAAgB,IAAI,MAAJ,CAAW,SAAX,CAAhB,CAF8C;;AAIlD,kBAAc,SAAd,GAA0B,UAAC,KAAD;YAAW,QAAQ,MAAM,IAAN;KAAnB,CAJwB;AAKlD,kBAAc,WAAd,CAA0B,OAA1B,EALkD;IAArB,CAA9B,CADqB;;;SAnEjB;;;;AA+EN,eAAI,QAAJ,CAAa,iBAAb;;mBAEe","sourcesContent":["import Component from 'metal-component/src/Component';\nimport Soy from 'metal-soy/src/Soy';\n\nimport { CancellablePromise } from 'metal-promise/src/promise/Promise';\nimport Slider from 'metal-slider/src/Slider';\n\nimport componentTemplates from './ContrastComponent.soy';\nimport controlsTemplates from './ContrastControls.soy';\n\n/**\n * Contrast Component\n */\nclass ContrastComponent extends Component {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.cache_ = {};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tthis.cache_ = {};\n\t}\n\n\t/**\n\t * Applies the brighntess filter to generate a final version of the\n\t * image. It caches intermediate results to avoid processing again in\n\t * case the same contrastValue is requested again for the same image.\n\t *\n\t * @param  {Object} imageData An object with several image representations.\n\t * @return {CancellablePromise} A promise that will resolve when the webworker\n\t * finishes processing the image for preview.\n\t */\n\tpreview(imageData) {\n\t\tlet contrastValue = this.components.contrastSlider.value;\n\t\tlet promise = this.cache_[contrastValue];\n\n\t\tif (!promise) {\n\t\t\tpromise = this.spawnWorker_({\n\t\t\t\tcontrastValue: contrastValue,\n\t\t\t\timageData: imageData.preview\n\t\t\t});\n\n\t\t\tthis.cache_[contrastValue] = promise;\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Applies the brighntess filter to generate a final\n\t * version of the image.\n\t *\n\t * @param  {Object} imageData An object with several image representations.\n\t * @return {CancellablePromise} A promise that will resolve when the webworker\n\t * finishes processing the image for preview.\n\t */\n\tprocess(imageData) {\n\t\tlet contrastValue = this.components.contrastSlider.value;\n\n\t\treturn new CancellablePromise((resolve, reject) => {\n\t\t\tthis.spawnWorker_({\n\t\t\t\tcontrastValue: contrastValue,\n\t\t\t\timageData: imageData.raw\n\t\t\t})\n\t\t\t\t.then(result => resolve(imageData.toURL(result)));\n\t\t});\n\t}\n\n\t/**\n\t * Spawns the a webworker to do the image processing in a different thread.\n\t *\n\t * @param  {Object} message An object with the image and contrast value.\n\t * @return {CancellablePromise} A promise that will resolve when the webworker\n\t * finishes processing the image.\n\t */\n\tspawnWorker_(message) {\n\t\treturn new CancellablePromise((resolve, reject) => {\n\t\t\tlet workerURI = this.modulePath + '/ContrastWorker.js';\n\t\t\tlet processWorker = new Worker(workerURI);\n\n\t\t\tprocessWorker.onmessage = (event) => resolve(event.data);\n\t\t\tprocessWorker.postMessage(message);\n\t\t});\n\t}\n}\n\n// Register component\nSoy.register(ContrastComponent, componentTemplates);\n\nexport default ContrastComponent;"]}